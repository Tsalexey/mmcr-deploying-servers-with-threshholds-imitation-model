__author__ = 'tsarev alexey'

import random
import math
from request import Request
#--------------------------------------------------------------------------------------------------------------------#
#													   GENERATED_VALUES_STORAGE														  	 #
#--------------------------------------------------------------------------------------------------------------------#
class Generated_values_storage:
	'''
		This class is designed to store data generated by simulation
	'''

	def add(self, simulation):
		'''
			Add data from simulation
		'''
		self.lambd = simulation.lambd
		self.mu = simulation.mu
		self.theta = simulation.theta
		self.servers_count = simulation.servers_count
		self.core_servers_count = simulation.core_servers_count
		self.L = simulation.L
		self.H = simulation.H
		self.simulation_time = simulation.simulation_time
		self.is_debug = simulation.is_debug
		self.flow = simulation.flow
		self.queue = simulation.queue
		self.served_requests = simulation.served_requests
		self.generated_requests = simulation.generated_requests		
		
		self.blocked += simulation.queue.blocked
		self.served += len(simulation.served_requests)
		self.generated += simulation.flow.generated_count	
		self.B += simulation.queue.blocked/len(simulation.served_requests)
		self.N += len(simulation.served_requests)/simulation_time

	def normalize(self, repeats):
		'''
			Normalize data if there was more then one repeats
		'''
		self.blocked /= repeats
		self.served /= repeats
		self.generated /= repeats	
		self.B /= repeats
		self.N /= repeats		
